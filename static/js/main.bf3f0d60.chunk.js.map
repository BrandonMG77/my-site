{"version":3,"sources":["logo.svg","Select.js","Render.js","App.js","reportWebVitals.js","index.js"],"names":["Select","handleChange","e","checkedValue","target","value","props","provinceChecker","handleYear","console","log","yearChecker","className","htmlFor","onChange","this","type","placeholder","React","Component","Render","renderBoxes","info","boxes","map","province","year","description","id","App","state","realInfo","test","boxesYear","setState","newRender","filter","newProvinces","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,kBCuDAA,E,4MA1CXC,aAAe,SAACC,GAEZ,IAAMC,EAAeD,EAAEE,OAAOC,MAChC,EAAKC,MAAMC,gBAAgBJ,I,EAI7BK,WAAa,SAACN,GAEV,IAAMC,EAAeD,EAAEE,OAAOC,MAC9BI,QAAQC,IAAIP,GACZ,EAAKG,MAAMK,YAAYR,I,4CAK3B,WAEI,OAAO,sBAAKS,UAAU,SAAf,UACH,4JACA,uBAAOA,UAAU,iBAAgBC,QAAQ,WAAzC,+BACA,yBAAQC,SAAUC,KAAKd,aAAcW,UAAU,YAA/C,UACA,wBAAQP,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,wBAEA,uBAAOO,UAAU,YAAYC,QAAQ,WAArC,2BACA,uBAAOG,KAAK,SAASC,YAAY,yCAAyCH,SAAUC,KAAKP,oB,GA/BhFU,IAAMC,WCyBZC,E,4JAtBX,WACI,IAAMC,EAAcN,KAAKT,MAGzB,OAFAG,QAAQC,IAAIW,EAAYC,KAAKC,OAEtB,8BAENF,EAAYC,KAAKC,MAAMC,KAAI,SAAAtB,GAAC,OAAI,sBAAKU,UAAU,MAAf,UAEjC,oBAAGA,UAAU,WAAb,cAA0BV,EAAEuB,YAC5B,oBAAGb,UAAU,OAAb,cAAsBV,EAAEwB,QACxB,oBAAGd,UAAU,cAAb,cAA6BV,EAAEyB,iBAJ4BzB,EAAE0B,a,GARhDV,IAAMC,WCgFZU,E,4MAjFbC,MAAO,CACLC,SAASC,EACTC,UAAWD,EACXT,MAAMS,EACNP,SAAS,M,EAKXlB,gBAAkB,SAACL,GAGjB,GAFAO,QAAQC,WAAWR,GAET,UAANA,EAEF,EAAKgC,SAAS,CACZX,MAAOS,EACPC,UAAWD,QAGR,CAAC,IAAMG,EAAY,EAAKL,MAAMC,SAASK,QAG5C,SAAAC,GAAY,OAAIA,EAAaZ,WAAavB,KAE1CO,QAAQC,IAAIyB,GACZ,EAAKD,SAAS,CACZX,MAAOY,EACPF,UAAWE,M,EAOjBxB,YAAc,SAACT,GAIb,GAFAO,QAAQC,IAAKR,GAEJ,IAALA,EAEF,EAAKgC,SAAS,CACZX,MAAO,EAAKO,MAAMC,eAGf,CAAC,IAAMI,EAAY,EAAKL,MAAMG,UAAUG,QAG7C,SAAAC,GAAY,OAAIA,EAAaX,MAAQxB,KAErCO,QAAQC,IAAIyB,GACZ,EAAKD,SAAS,CACZX,MAAOY,M,4CAQb,WAEE,OAAO,sBAAKvB,UAAU,aAAf,UACJ,cAAC,EAAD,CAAQL,gBAAiBQ,KAAKR,gBAAiBI,YAAaI,KAAKJ,cACpE,cAAC,EAAD,CAAQW,KAAMP,KAAKe,e,GAjELZ,IAAMC,WCGTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bf3f0d60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {Component} from 'react';\r\nimport test from './sample/test.json';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Select extends React.Component {\r\n\r\n    handleChange = (e) => {\r\n\r\n        const checkedValue = e.target.value;\r\n      this.props.provinceChecker(checkedValue);\r\n\r\n    }\r\n\r\n    handleYear = (e) => {\r\n\r\n        const checkedValue = e.target.value;\r\n        console.log(checkedValue);\r\n        this.props.yearChecker(checkedValue);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        return <div className=\"select\">\r\n            <h3>Below you can choose a worker according to his place of living (province) and age (Returns all the workers under that age)</h3>\r\n            <label className=\"label_province\"htmlFor=\"province\">Choose a province</label>\r\n            <select onChange={this.handleChange} className=\"provinces\">\r\n            <option value=\"Todos\">Todos</option>\r\n            <option value=\"San José\">San José</option>\r\n            <option value=\"Cartago\">Cartago</option>\r\n            <option value=\"Alajuela\">Alajuela</option>\r\n            <option value=\"Heredia\">Heredia</option>\r\n            </select>\r\n            <label className=\"label_age\" htmlFor=\"province\" >Choose an age</label>\r\n            <input type=\"number\" placeholder=\"Returns all the workers below that age\" onChange={this.handleYear}></input>\r\n            \r\n        </div>\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Select;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {Component} from 'react';\r\nimport test from './sample/test.json';\r\nimport App from './App';\r\nimport Select from './Select';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Render extends React.Component {\r\n\r\n    render(){\r\n        const renderBoxes = this.props;\r\n        console.log(renderBoxes.info.boxes);\r\n\r\n        return <div>\r\n   \r\n        {renderBoxes.info.boxes.map(e => <div className=\"box\" key={e.id}>\r\n      \r\n        <p className=\"province\"> {e.province}</p>\r\n        <p className=\"year\"> {e.year}</p>\r\n        <p className=\"description\"> {e.description}</p>\r\n        \r\n          </div>)}\r\n       \r\n          </div>\r\n\r\n    }\r\n   \r\n  }\r\n\r\n\r\n\r\nexport default Render;\r\n\r\n/*\r\n const boxesRender = this.props.boxes;\r\n\r\n    console.log(boxesRender);\r\n \r\n   \r\n*/","import logo from './logo.svg';\nimport './App.css';\nimport react  from 'react';\nimport React, {Component} from 'react';\nimport test from './sample/test.json';\nimport Select from './Select';\nimport Render from './Render';\nlet year = \"\";\n\nclass App extends React.Component {\n\n  state ={\n    realInfo:test,\n    boxesYear: test,\n    boxes:test,\n    province:\"xx\"\n    \n\n  }\n\n  provinceChecker = (e) => {\n    console.log(typeof e);\n    //console.log(typeof this.state.boxes[0].province);\n    if (e === \"Todos\") {\n    \n      this.setState({\n        boxes: test,\n        boxesYear: test\n      })\n\n    } else {const newRender = this.state.realInfo.filter(\n      // OJITOOOO NO ME FUNCIONABA EL FILTER POR EL !== YA QUE EL ID QUE YO LE PASABA\n      //DESDE TASKS ERA UN STRING Y EL ID DEL ARRAY ORIGINAL ERA UN NUMBER\n      newProvinces => newProvinces.province === e     \n      );\n      console.log(newRender);\n      this.setState({\n        boxes: newRender,\n        boxesYear: newRender\n      })\n  \n    }\n    \n  }\n\n  yearChecker = (e) => {\n    \n    console.log( e);\n    //console.log( this.state.boxes[0].year);\n    if (e == \"\") {\n\n      this.setState({\n        boxes: this.state.realInfo\n      })\n\n    } else {const newRender = this.state.boxesYear.filter(\n      // OJITOOOO NO ME FUNCIONABA EL FILTER POR EL !== YA QUE EL ID QUE YO LE PASABA\n      //DESDE TASKS ERA UN STRING Y EL ID DEL ARRAY ORIGINAL ERA UN NUMBER\n      newProvinces => newProvinces.year <= e     \n      );\n      console.log(newRender);\n      this.setState({\n        boxes: newRender\n      })}\n    \n\n      \n      \n  }\n\n  render() {\n    \n    return <div className=\"background\">\n       <Select provinceChecker={this.provinceChecker} yearChecker={this.yearChecker}/>\n    <Render info={this.state}/>\n   \n    </div>\n   \n\n\n  \n\n  }\n\n\n  }\n\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}